---
type Props = {
  when: unknown;
  cloak?: true;
  children: Array<astroHTML.JSX.HTMLAttributes> | string;
};

const { when, cloak } = Astro.props;
const { slots } = Astro;

const slotBasedOnDefault =
  slots.has("default") && when ? await slots.render("default") : null;
const slotBasedOnCloaked =
  slots.has("default") && !when && cloak
    ? `<div style="display:none">${await slots.render("default")}</div>`
    : null;
const slotBasedOnFallback = slots.has("fallback")
  ? await slots.render("fallback")
  : "Please use a fallback slot or a child based on what you want to render";
---

<Fragment set:html={slotBasedOnDefault} />
<Fragment set:html={slotBasedOnCloaked} />

<Fragment set:html={slotBasedOnFallback} />
